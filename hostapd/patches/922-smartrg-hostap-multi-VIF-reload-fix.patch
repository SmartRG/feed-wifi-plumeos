--- a/src/ap/hostapd.c
+++ b/src/ap/hostapd.c
@@ -2190,7 +2190,7 @@ static int hostapd_setup_interface_compl
 		hapd = iface->bss[j];
 		if (j)
 			os_memcpy(hapd->own_addr, prev_addr, ETH_ALEN);
-		if (hostapd_setup_bss(hapd, j == 0)) {
+		if (hostapd_setup_bss(hapd, (j == 0) ? 1 : -1)) {
 			for (;;) {
 				hapd = iface->bss[j];
 				hostapd_bss_deinit_no_free(hapd);
--- a/src/drivers/driver_nl80211.c
+++ b/src/drivers/driver_nl80211.c
@@ -194,7 +194,8 @@ static int nl80211_put_mesh_config(struc
 #endif /* CONFIG_MESH */
 static int i802_sta_disassoc(void *priv, const u8 *own_addr, const u8 *addr,
 			     u16 reason);
-
+static int nl80211_put_freq_params(struct nl_msg *msg,
+			     const struct hostapd_freq_params *freq);
 
 /* Converts nl80211_chan_width to a common format */
 enum chan_width convert2width(int width)
@@ -4813,6 +4814,13 @@ static int wpa_driver_nl80211_set_ap(voi
 		goto fail;
 #endif /* CONFIG_FILS */
 
+	if (params->freq) {
+		ret = nl80211_put_freq_params(msg, params->freq);
+		if(ret)
+			wpa_printf(MSG_DEBUG, "nl80211: Failed to add freq params: %d (%s)",
+				ret, strerror(-ret));
+	}
+
 	ret = send_and_recv_msgs_connect_handle(drv, msg, bss, 1);
 	if (ret) {
 		wpa_printf(MSG_DEBUG, "nl80211: Beacon set failed: %d (%s)",
