Index: libiwinfo-2019-10-16-07315b6f/iwinfo_nl80211.c
===================================================================
--- libiwinfo-2019-10-16-07315b6f.orig/iwinfo_nl80211.c
+++ libiwinfo-2019-10-16-07315b6f/iwinfo_nl80211.c
@@ -2142,6 +2142,75 @@ static int nl80211_get_assoclist(const c
 	return -1;
 }
 
+static char *nl80211_get_pdb_info(char *pdbfile, char *pdbkey)
+{
+	FILE  *pFile       = NULL;
+	char   line[256]   = "";
+	char  *psKey       = NULL;
+	char  *psValue     = NULL;
+	char  *pdbval      = NULL;
+
+	pFile = fopen(pdbfile, "r");
+	if (!pFile) {
+		return NULL;
+	}
+
+	while (!feof(pFile)) {
+		if (fgets(line, 255, pFile) == NULL) {
+			break;
+		}
+		if (line[0] == '#') {
+			continue;
+		}
+
+		psKey = strtok(line, "=\n\r");
+		if (psKey == NULL) {
+			continue;
+		}
+
+		if (strcasecmp(psKey, pdbkey) == 0) {
+			psValue = strtok(NULL, "=\n\r");
+			pdbval = strdup(psValue);
+			break;
+		}
+	}
+	fclose(pFile);
+
+	return pdbval;
+}
+
+#define TX_POWER_MAX 30
+static int nl80211_get_txpwr_max(char *ifname)
+{
+	int   pwrmax      = TX_POWER_MAX;
+	char *pdbval      = NULL;
+	char  pdbfile[48] = "/usr/srg/scripts/";
+
+	pdbval = nl80211_get_pdb_info("/etc/engnum.sh", "pdb_file");
+	if (pdbval == NULL) {
+		return pwrmax;
+	}
+	strcat(pdbfile, pdbval);
+	free(pdbval);
+
+	if (!strncmp(ifname, "wifi2g", 6) || !strcmp(ifname, "phy0")) {
+		pdbval = nl80211_get_pdb_info(pdbfile, "PDB_WIFI2G_TXPOWER_LIMIT");
+	} else if (!strncmp(ifname, "wifi5g", 6) || !strcmp(ifname, "phy1") || !strcmp(ifname, "phy2")) {
+		pdbval = nl80211_get_pdb_info(pdbfile, "PDB_WIFI5G_TXPOWER_LIMIT");
+	} else {
+		pdbval = NULL;
+	}
+	if (pdbval) {
+		pwrmax = atoi(pdbval);
+		free(pdbval);
+	}
+
+	if (pwrmax > 0 && pwrmax < TX_POWER_MAX)
+		return pwrmax;
+	else
+		return TX_POWER_MAX;
+}
+
 static int nl80211_get_txpwrlist_cb(struct nl_msg *msg, void *arg)
 {
 	int *dbm_max = arg;
@@ -2209,6 +2278,10 @@ static int nl80211_get_txpwrlist(const c
 
 	if (!err)
 	{
+		int pdbmax = nl80211_get_txpwr_max(ifname);
+		if (dbm_max > pdbmax) {
+			dbm_max = pdbmax;
+		}
 		for (dbm_cur = 0, dbm_cnt = 0;
 		     dbm_cur < dbm_max;
 		     dbm_cur++, dbm_cnt++)
